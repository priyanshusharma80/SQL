
-- DELETING EXISTING TABLES
-- DROP TABLE IF EXISTS orders;
-- DROP TABLE IF EXISTS employees;

-- //  MANAGING DATABASES
-- CREATE DATABASE school;           -- to create a new database
-- USE school;                                     -- need to make sure on which db command must be executed
-- DROP DATABASE school;              -- will drop the database
-- SHOW DATABASES;                       -- list down all the existing databases
-- SHOW TABLES;                              -- list down all the tables existing in the database


-- // CREATING A NEW TABLE
-- CREATE TABLE student(
--     studentId INT PRIMARY KEY,
--     name varchar(40),
--     age INT,
--     gender varchar(20)
-- );



-- // INSERTING VALUES

-- 1. ONE BY ONE
-- INSERT INTO student (studentId, name,age,gender)  VALUES (66,"Priyanshu",21,"Male");

-- 2. MULTIPLE AT ONCE
-- INSERT INTO student (studentId, name, age, gender) VALUES 
-- (1, 'Alice Johnson', 20, 'Female'),
-- (2, 'Bob Smith', 22, 'Male'),
-- (3, 'Charlie Brown', 21, 'Male'),
-- (4, 'Diana Ross', 19, 'Female'),
-- (5, 'Evan Turner', 23, 'Male'),
-- (6, 'Fiona Gallagher', 22, 'Female'),
-- (7, 'George Harris', 20, 'Male'),
-- (8, 'Hannah Lee', 21, 'Female'),
-- (9, 'Ian McGregor', 24, 'Male'),
-- (10, 'Jenna Williams', 19, 'Female');

-- SELECT * from student;


-- CLAUSES 

-- 1. WHERE
-- SELECT * FROM student WHERE age>=20;

-- 2. BETWEEN
-- SELECT * FROM student WHERE age BETWEEN 20 AND 23

-- 3. OR/AND/NOT
-- SELECT * FROM student WHERE name = "Priyanshu" OR name = "Bob Smith";
-- SELECT * FROM student WHERE name = "George Harris" AND age=20;
-- SELECT * FROM student WHERE NOT gender = "Male";

-- 4. IN :  used to reduce no of ORs in the query
-- SELECT * FROM student WHERE age in (20,23,22);

-- INSERT INTO student values 
-- (333,"Hello",45,NULL),
-- (334,"Hello2",NULL,'Male'),
-- (335,"Hello3",NULL,'Female'),
-- (336,"Hello4",47,NULL);

-- SELECT * FROM student;

-- 5. IS NULL
-- SELECT * FROM student WHERE gender IS NULL or age IS NULL;

-- LIMIT CLAUSE
-- SELECT * FROM student LIMIT 5;

-- ORDER BY 
-- SELECT age FROM student ORDER BY age DESC LIMIT 10;
-- SELECT age FROM student ORDER BY age LIMIT 10;

-- DISTINCT
-- SELECT DISTINCT age FROM student ORDER BY age;


-- // CONSTRAINTS 

-- 1. PRIMARY KEY
-- CREATE TABLE student(
--     studentId INT PRIMARY KEY,
--     name varchar(40),
--     age INT,
--     gender varchar(20),
--     PRIMARY KEY (id),                   // another way to define
-- );


-- 2. FOREIGN KEY
-- CREATE TABLE course(
--     cId INT PRIMARY KEY,
--     duration INT,
--     FOREIGN KEY (cId) REFERENCES student(id)             // another way to define
-- );


-- NOTE : An attribute can be a PRIMARY KEY and FOREIGN KEY both in a single table


-- 3. UNIQUE
-- CREATE TABLE course(
--     cId INT PRIMARY KEY,
--     duration INT,
--     count INT UNIQUE,
--     FOREIGN KEY (cId) REFERENCES student(id)             // another way to define
-- );


-- DEFAULT:  Sets the default value if not specified
-- CREATE TABLE student(
--     studentId INT PRIMARY KEY,
--     name varchar(40),
--     age INT DEFAULT 0,
--     gender varchar(20),
-- );


-- CHECK
-- CREATE TABLE student (
--     studentId INT PRIMARY KEY,
--     name VARCHAR(40),
--     age INT,
--     gender VARCHAR(20),
--     CHECK (age >= 0 AND age <= 150)
-- );

-- Adding a Check constraint in existing table

-------------------------------------------------------------------------------

-- ALTER TABLE student
-- ADD CONSTRAINT chk_age CHECK (age >= 0 AND age <= 150);

--------------------------------------------------------------------------------

-- ALTER TABLE student
-- ADD CONSTRAINT chk_gender CHECK (gender IN ('Male', 'Female', NULL));

---------------------------------------------------------------------------------

-- INSERT INTO student (studentId, name, age, gender) VALUES
-- (1, 'Alice Johnson', 20, 'Female'); -- This will succeed

-- INSERT INTO student (studentId, name, age, gender) VALUES
-- (2, 'Bob Smith', 200, 'Male'); -- This will fail because age > 150

-- INSERT INTO student (studentId, name, age, gender) VALUES
-- (3, 'Charlie Brown', 21, 'Unknown'); -- This will fail because gender is not 'Male', 'Female', or NULL



-- ALTER OPERATIONS

-- : ADD : add new column
-- ALTER TABLE student ADD course VARCHAR(20) NOT NULL DEFAULT "Kuchhbhi";


-- : MODIFY:  change datatype of an attribute
-- ALTER TABLE student MODIFY course CHAR(20);


-- CREATE TABLE student(
--     studentId INT PRIMARY KEY,
--     name varchar(40),
--     age INT,
--     gender varchar(20)
-- );

-- : CHANGE :  rename column name
-- ALTER TABLE student CHANGE COLUMN name student_name VARCHAR(30);

-- : DROP :  Drop a column completely
-- ALTER TABLE student DROP gender;

-- : RENAME : rename table name itself
-- ALTER TABLE student RENAME TO studentTable;

SELECT * FROM student;            -- No such table exists
SELECT * FROM studentTable;       


